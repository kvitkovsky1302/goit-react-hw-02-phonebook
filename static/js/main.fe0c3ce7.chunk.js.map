{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleNameChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","type","onChange","pattern","title","required","Component","Filter","filter","onInputChange","ContactList","contacts","map","id","App","formSubmitHandler","contact","shortid","generate","prevState","getVisibleContacts","normalizedFilter","toLowerCase","includes","visibleContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRA6DeA,E,4MAzDbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,iBAAmB,SAAAC,GACjB,MAAwBA,EAAEC,OAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBACF,MAAyB,EAAKT,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,EAAKQ,MAAMC,SAASV,EAAMC,GAC1B,EAAKU,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CACZN,KAAM,GACNC,OAAQ,M,4CAIZ,WACE,OACE,uBAAMS,SAAUE,KAAKL,aAArB,UACE,yCAEE,uBACEM,KAAK,OACLb,KAAK,OACLK,MAAOO,KAAKb,MAAMC,KAClBc,SAAUF,KAAKV,iBACfa,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,2CAEE,uBACEJ,KAAK,MACLb,KAAK,SACLK,MAAOO,KAAKb,MAAME,OAClBa,SAAUF,KAAKV,iBACfa,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQJ,KAAK,SAAb,gC,GApDkBK,aCeXC,MAhBf,YAA4C,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,cACxB,OACE,0DAEE,uBACER,KAAK,OACLb,KAAK,SACLK,MAAOe,EACPN,SAAUO,EACVN,QAAQ,yHACRE,UAAQ,QCEDK,MAZf,YAAoC,IAAbC,EAAY,EAAZA,SACrB,OACE,6BACGA,EAASC,KAAI,gBAAGC,EAAH,EAAGA,GAAIzB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,+BACGD,EADH,IACUC,IADDwB,SC6DFC,E,4MA5Db3B,MAAQ,CACNwB,SAAU,CACR,CAAEE,GAAI,OAAQzB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEwB,GAAI,OAAQzB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEwB,GAAI,OAAQzB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEwB,GAAI,OAAQzB,KAAM,iBAAkBC,OAAQ,cAEhDmB,OAAQ,I,EAGVlB,iBAAmB,SAAAC,GACjB,MAAwBA,EAAEC,OAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BsB,kBAAoB,SAAC3B,EAAMC,GACzB,IAAM2B,EAAU,CACdH,GAAII,IAAQC,WACZ9B,OACAC,UAEF,EAAKK,UAAS,SAAAyB,GAAS,MAAK,CAC1BR,SAAS,CAAEK,GAAH,mBAAeG,EAAUR,gB,EAIrCS,mBAAqB,WACnB,MAA6B,EAAKjC,MAA1BqB,EAAR,EAAQA,OAAQG,EAAhB,EAAgBA,SACVU,EAAmBb,EAAOc,cAEhC,OAAOX,EAASH,QAAO,SAAAQ,GAAO,OAC5BA,EAAQ5B,KAAKkC,cAAcC,SAASF,O,4CAIxC,WACE,IAAQb,EAAWR,KAAKb,MAAhBqB,OACFgB,EAAkBxB,KAAKoB,qBAC7B,OACE,gCACE,2CACA,cAAC,EAAD,CAAatB,SAAUE,KAAKe,oBAC5B,0CACA,cAAC,EAAD,CAAQP,OAAQA,EAAQC,cAAeT,KAAKV,mBAC3CkC,EAAgBC,OAAS,GACxB,cAAC,EAAD,CAAad,SAAUa,W,GA9CflB,aCDlBoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fe0c3ce7.chunk.js","sourcesContent":["import { Component } from 'react';\n// import styles from './Form.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleNameChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleNameChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleNameChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","// import styles from './Filter.module.css';\n\nfunction Filter({ filter, onInputChange }) {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onInputChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        required\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","// import styles from './ContactList.module.css';\n\nfunction ContactList({ contacts }) {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name} {number}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleNameChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  formSubmitHandler = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    this.setState(prevState => ({\n      contacts: [contact, ...prevState.contacts],\n    }));\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} onInputChange={this.handleNameChange} />\n        {visibleContacts.length > 0 && (\n          <ContactList contacts={visibleContacts} />\n        )}\n        {/* <ul>\n          {visibleTodos.length > 0 &&\n            visibleTodos.map(({ id, name, number }) => (\n              <li key={id}>\n                {name} {number}\n              </li>\n            ))}\n        </ul> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}